The ``2-matrix_divided`` module
=========================

Using ``matrix_divided``
---------------------

This is a text file to test the 2-matrix_divided module.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now Use with:

matrix having correct types values and correct div Value
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

matrix has some elements not integer or float
>>> matrix_divided([[1, "s", 3],[4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix with correct values and div invalid value not number (integer or float)
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], "s")
Traceback (most recent call last):
TypeError: div must be a number

matrix with correct values and div = 0
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

matrix with different Rows Lenght
>>> matrix_divided([[1, 2, 3],[4, 5]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 3],[4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

Send matrix as None
>>> matrix_divided(None, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Send Missing argument for div
>>> matrix_divided([[1, 2], [2, 3]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Send missing arguments
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
